{"version":3,"file":"static/js/769.d2375a04.chunk.js","mappings":"wXAEaA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8eAuBlBC,EAAQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8R,UCvBpBG,EAAQL,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oc,UCCpBI,EAAY,SAAHC,GAQf,IAADC,EAAAD,EAPJE,KAAAA,OAAI,IAAAD,EAAG,OAAMA,EACbE,EAAIH,EAAJG,KACAC,EAAWJ,EAAXI,YACAC,EAAOL,EAAPK,QACAC,EAAKN,EAALM,MACAC,EAAQP,EAARO,SACAC,EAAKR,EAALQ,MAEA,OACEC,EAAAA,EAAAA,KAACX,EAAK,CACJS,SAAUA,EACVC,MAAOA,EACPJ,YAAaA,EACbF,KAAMA,EACNC,KAAMA,EACNE,QAASA,EACTC,MAAOA,EACPI,UAAQ,GAGd,E,UCxBaC,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,ECWjDC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjBC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7Bf,EAAIiB,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBX,GAAWc,EAAAA,EAAAA,IAAYhB,GAEvBiB,EAAgB,SAAAC,GACpB,OAAQA,EAAMC,OAAO3B,MACnB,IAAK,OACHmB,EAAQO,EAAMC,OAAOtB,OACrB,MACF,IAAK,SACHkB,EAAUG,EAAMC,OAAOtB,OACvB,MACF,QACE,OAEN,EAoBMuB,EAAY,WAChBT,EAAQ,IACRI,EAAU,GACZ,EAEA,OACEM,EAAAA,EAAAA,MAACxC,EAAI,CAACyC,SAxBa,SAAAJ,GAOnB,GANAA,EAAMK,iBAEerB,EAASsB,MAC5B,SAAAC,GAAO,OAAIA,EAAQjC,KAAKkC,sBAAwBlC,EAAKkC,mBAAmB,IAIxE,OAAOC,IAAAA,OAAAA,QAAwB,GAADC,OACzBpC,EAAI,2BACPqC,EAAAA,GAIJxB,GAASyB,EAAAA,EAAAA,IAAW,CAAEtC,KAAAA,EAAMsB,OAAAA,KAC5BM,GACF,EAQ+BW,SAAA,EAC3BV,EAAAA,EAAAA,MAACpC,EAAK,CAAA8C,SAAA,CAAC,QAELjC,EAAAA,EAAAA,KAACV,EAAS,CACRQ,SAAUqB,EACVpB,MAAOL,EACPA,KAAK,OACLC,YAAY,uBACZC,QAAQ,yHACRC,MAAM,+IAGV0B,EAAAA,EAAAA,MAACpC,EAAK,CAAA8C,SAAA,CAAC,UAELjC,EAAAA,EAAAA,KAACV,EAAS,CACRQ,SAAUqB,EACVpB,MAAOiB,EACPvB,KAAK,MACLC,KAAK,SACLC,YAAY,yBACZC,QAAQ,yFACRC,MAAM,qGAGVG,EAAAA,EAAAA,KAACkC,EAAAA,EAAG,CAACzC,KAAK,SAAS0C,KAAMC,EAAAA,IAAYC,OAAO,MAAMC,KAAK,kBAG7D,EChFaC,EAAOvD,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uLCAhBsD,GAAYxD,EAAAA,GAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yKAcpBuD,GAAczD,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qEAMxBwD,GAAgB1D,EAAAA,GAAAA,IAAU2D,IAAAA,GAAAzD,EAAAA,EAAAA,GAAA,uKAU1B0D,GAAW5D,EAAAA,GAAAA,GAAS6D,IAAAA,GAAA3D,EAAAA,EAAAA,GAAA,shBAwBpB4D,GAAe9D,EAAAA,GAAAA,IAAU+D,IAAAA,GAAA7D,EAAAA,EAAAA,GAAA,4aAqBzB8D,GAAchE,EAAAA,GAAAA,IAAUiE,IAAAA,GAAA/D,EAAAA,EAAAA,GAAA,uD,qEC3ExBgE,GAAelE,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sNAazBiE,GAAcnE,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wNCPxBwD,IANc1D,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qEAMRF,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0LAY1B0D,GAAW5D,EAAAA,GAAAA,IAAU2D,IAAAA,GAAAzD,EAAAA,EAAAA,GAAA,6XAoBrBkE,GAAiBpE,EAAAA,GAAAA,IAAU6D,IAAAA,GAAA3D,EAAAA,EAAAA,GAAA,uVAiB3BmE,GAAerE,EAAAA,GAAAA,KAAW+D,IAAAA,GAAA7D,EAAAA,EAAAA,GAAA,2UAmB1BoE,GAAetE,EAAAA,GAAAA,IAAUiE,IAAAA,GAAA/D,EAAAA,EAAAA,GAAA,gNAUzBC,GAAQH,EAAAA,GAAAA,MAAYuE,IAAAA,GAAArE,EAAAA,EAAAA,GAAA,kWAoBpBG,GAAQL,EAAAA,GAAAA,MAAYwE,IAAAA,GAAAtE,EAAAA,EAAAA,GAAA,4Y,oDCrFpBuE,GAAY,SAAHlE,GAA4B,IAAtBmE,EAAEnE,EAAFmE,GAAIC,EAAUpE,EAAVoE,WACxBvD,GAAWc,EAAAA,EAAAA,IAAYhB,GACvB0D,EAAiBxD,EAASsB,MAAK,SAAAC,GAAO,OAAIA,EAAQ+B,KAAOA,CAAE,IAE3DnD,GAAWC,EAAAA,EAAAA,MAEjBC,GAAwBC,EAAAA,EAAAA,UAAS,GAADoB,OAAI8B,EAAelE,OAAOiB,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDf,EAAIiB,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,GAADoB,OAAI8B,EAAe5C,SAASD,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAzDE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBI,EAAgB,SAAAC,GACpB,OAAQA,EAAMC,OAAO3B,MACnB,IAAK,OACHmB,EAAQO,EAAMC,OAAOtB,OACrB,MACF,IAAK,SACHkB,EAAUG,EAAMC,OAAOtB,OACvB,MACF,QACE,OAEN,EAgBMuB,EAAY,WAChBT,EAAQ,IACRI,EAAU,GACZ,EAEA,OACEjB,EAAAA,EAAAA,KAAC4C,GAAQ,CAAAX,UACPV,EAAAA,EAAAA,MAAC6B,GAAc,CAAAnB,SAAA,EACbjC,EAAAA,EAAAA,KAAC0C,GAAa,CAAAT,UACZjC,EAAAA,EAAAA,KAAA,OAAK6D,IAAKC,GAAQC,IAAI,cAExBxC,EAAAA,EAAAA,MAAC8B,GAAY,CAAC7B,SAzBC,SAAAJ,GAMnB,GALAA,EAAMK,iBACerB,EAASsB,MAC5B,SAAAC,GAAO,OAAIA,EAAQjC,OAASA,GAAQiC,EAAQX,SAAWA,CAAM,IAI7D,OAAOa,IAAAA,OAAAA,QAAwB,kBAAmBE,EAAAA,GAEpDxB,GAASyD,EAAAA,EAAAA,IAAc,CAAEN,GAAAA,EAAIhE,KAAAA,EAAMsB,OAAAA,KACnC2C,IACArC,GACF,EAa2CW,SAAA,EACnCV,EAAAA,EAAAA,MAAC+B,GAAY,CAAArB,SAAA,EACXV,EAAAA,EAAAA,MAACpC,GAAK,CAAA8C,SAAA,CAAC,gBAELjC,EAAAA,EAAAA,KAACX,GAAK,CACJS,SAAUqB,EACVpB,MAAOL,EACPA,KAAK,OACLC,YAAY,uBACZC,QAAQ,yHACRC,MAAM,+IAGV0B,EAAAA,EAAAA,MAACpC,GAAK,CAAA8C,SAAA,CAAC,iBAELjC,EAAAA,EAAAA,KAACX,GAAK,CACJS,SAAUqB,EACVpB,MAAOiB,EACPvB,KAAK,MACLC,KAAK,SACLC,YAAY,yBACZC,QAAQ,yFACRC,MAAM,wGAIZG,EAAAA,EAAAA,KAACkC,EAAAA,EAAG,CACFC,KAAM8B,EAAAA,IACNxE,KAAK,SACL4C,OAAO,SACPC,KAAK,0BAMjB,E,WCtGa4B,GAAclF,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yHAQxBwD,GAAgB1D,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2MAY1BiF,GAAOnF,EAAAA,GAAAA,EAAQ2D,IAAAA,GAAAzD,EAAAA,EAAAA,GAAA,8LAYf0D,GAAW5D,EAAAA,GAAAA,IAAU6D,IAAAA,GAAA3D,EAAAA,EAAAA,GAAA,0YAqBrBkE,GAAiBpE,EAAAA,GAAAA,IAAU+D,IAAAA,GAAA7D,EAAAA,EAAAA,GAAA,uVAiB3BkF,GAAmBpF,EAAAA,GAAAA,EAAQiE,IAAAA,GAAA/D,EAAAA,EAAAA,GAAA,kH,sDCxD3BmF,GAA0B,SAAH9E,GAAkC,IAA5BmE,EAAEnE,EAAFmE,GAAIC,EAAUpE,EAAVoE,WAAYjE,EAAIH,EAAJG,KAClDa,GAAWC,EAAAA,EAAAA,MAEjB,OACER,EAAAA,EAAAA,KAAC4C,GAAQ,CAAAX,UACPV,EAAAA,EAAAA,MAAC6B,GAAc,CAAAnB,SAAA,EACbjC,EAAAA,EAAAA,KAAC0C,GAAa,CAAAT,UACZjC,EAAAA,EAAAA,KAAA,OAAK6D,IAAKC,GAAQC,IAAI,cAExBxC,EAAAA,EAAAA,MAAC2C,GAAW,CAAAjC,SAAA,EACVV,EAAAA,EAAAA,MAAC6C,GAAgB,CAAAnC,SAAA,CAAC,oCACgBjC,EAAAA,EAAAA,KAAA,QAAAiC,SAAOvC,IAAY,6BAGrDM,EAAAA,EAAAA,KAACmE,GAAI,CAAAlC,SAAC,oCACNjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAG,CACFC,KAAMmC,GAAAA,IACN7E,KAAK,SACL4C,OAAO,SACPC,KAAK,iBACLiC,QAAS,WACPhE,GAASiE,EAAAA,EAAAA,IAAcd,IACvBC,GACF,WAMZ,ECpCMc,GAAYC,SAASC,cAAc,eAE5BC,GAAQ,SAAHrF,GAA0C,IAApCmE,EAAEnE,EAAFmE,GAAIC,EAAUpE,EAAVoE,WAAYtB,EAAM9C,EAAN8C,OAAQ3C,EAAIH,EAAJG,MAC9CmF,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,SAAA1D,GACE,WAAfA,EAAM2D,MACRpB,GAEJ,EAIA,OAFAqB,OAAOC,iBAAiB,UAAWH,GAE5B,WACLE,OAAOE,oBAAoB,UAAWJ,EACxC,CACF,GAAG,CAACnB,IAQJ,OAAOwB,EAAAA,GAAAA,eACLnF,EAAAA,EAAAA,KAACkD,GAAY,CAACqB,QAPQ,SAAAnD,GAClBA,EAAMgE,gBAAkBhE,EAAMC,QAChCsC,GAEJ,EAGyC1B,UACrCjC,EAAAA,EAAAA,KAACmD,GAAW,CAAAlB,SACE,SAAXI,GACCrC,EAAAA,EAAAA,KAACyD,GAAS,CAACC,GAAIA,EAAIC,WAAYA,KAE/B3D,EAAAA,EAAAA,KAACqE,GAAuB,CACtBX,GAAIA,EACJhE,KAAMA,EACNiE,WAAYA,QAKpBc,GAEJ,ECjCaY,GAAc,SAAH9F,GAA8B,IAAxBmE,EAAEnE,EAAFmE,GAAIhE,EAAIH,EAAJG,KAAMsB,EAAMzB,EAANyB,OACtCP,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1C6E,EAAS3E,EAAA,GAAE4E,EAAY5E,EAAA,GAC9BG,GAAsCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA3C0E,EAAWzE,EAAA,GAAE0E,EAAc1E,EAAA,GAE5B2E,EAAc,SAAArD,GAClBkD,GAAcD,GACdG,EAAepD,EACjB,EAEA,OACEd,EAAAA,EAAAA,MAACqB,GAAQ,CAAAX,SAAA,EACPjC,EAAAA,EAAAA,KAAC0C,GAAa,CAAAT,UACZjC,EAAAA,EAAAA,KAAA,OAAK6D,IAAKC,GAAQC,IAAKrE,EAAMiG,MAAM,UAErCpE,EAAAA,EAAAA,MAACuB,GAAY,CAAAb,SAAA,EACXV,EAAAA,EAAAA,MAACyB,GAAW,CAAAf,SAAA,CAAC,SACNV,EAAAA,EAAAA,MAAA,QAAAU,SAAA,CAAM,IAAEvC,EAAK,WAEpB6B,EAAAA,EAAAA,MAACyB,GAAW,CAAAf,SAAA,CAAC,SACJ,KACPjC,EAAAA,EAAAA,KAACwC,GAAS,CAACoD,KAAI,OAAA9D,OAASd,GAASiB,UAC/BjC,EAAAA,EAAAA,KAAA,QAAAiC,SAAOjB,aAIbO,EAAAA,EAAAA,MAACkB,GAAW,CAAAR,SAAA,EACVjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAG,CACFC,KAAM0D,EAAAA,IACNpG,KAAK,SACL4C,OAAO,SACPC,KAAK,iBACLiC,QAAS,kBAAMmB,EAAY,SAAS,KAGtC1F,EAAAA,EAAAA,KAACkC,EAAAA,EAAG,CACFC,KAAM2D,EAAAA,IACNrG,KAAK,SACL4C,OAAO,OACPC,KAAK,eACLiC,QAAS,kBAAMmB,EAAY,OAAO,OAGrCJ,IACCtF,EAAAA,EAAAA,KAAC4E,GAAK,CACJlB,GAAIA,EACJC,WAAY+B,EACZrD,OAAQmD,EACR9F,KAAMA,MAKhB,ECnEaqG,GAAY,SAAA5F,GAAK,OAAIA,EAAM6F,MAAO,ECWlCC,GAAc,WACzB,IAAM1F,GAAWC,EAAAA,EAAAA,OAEjBqE,EAAAA,EAAAA,YAAU,WACRtE,GAAS2F,EAAAA,EAAAA,MACX,GAAG,CAAC3F,IAEJ,IAAMH,GAAWc,EAAAA,EAAAA,IAAYhB,GACvB8F,GAAS9E,EAAAA,EAAAA,IAAY6E,IAmB3B,OACE/F,EAAAA,EAAAA,KAAAmG,EAAAA,SAAA,CAAAlE,UACEjC,EAAAA,EAAAA,KAACuC,EAAI,CAAAN,SAnBc,WACrB,IAAMmE,EAAQJ,EAAOpE,oBAEfyE,EAAmBjG,EAAS4F,QAAO,SAAArE,GAAO,OAC9CA,EAAQjC,KAAKkC,oBAAoB0E,SAASF,EAAM,IAGlD,OAAIA,IAAUC,EAAiBE,QAC7B1E,IAAAA,OAAAA,QACE,oCACAE,EAAAA,GAEK,IAEFsE,CACT,CAKOG,GAAiBC,KAAI,SAAA9E,GACpB,OACE3B,EAAAA,EAAAA,KAACqF,GAAW,CACV3B,GAAI/B,EAAQ+B,GAEZhE,KAAMiC,EAAQjC,KACdsB,OAAQW,EAAQX,QAFXW,EAAQ+B,GAKnB,OAIR,E,sBCpDagD,GAAgB1H,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4nBCOjCyH,IAAc3H,EAAAA,EAAAA,IAAO4H,GAAAA,cAAP5H,CAAqBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ybAqB5B2H,GAAS,WACpB,IAAMtG,GAAWC,EAAAA,EAAAA,MACXwF,GAAS9E,EAAAA,EAAAA,IAAY6E,IAE3B,OACE/F,EAAAA,EAAAA,KAAC0G,GAAa,CAAAzE,UACZV,EAAAA,EAAAA,MAACpC,EAAK,CAAA8C,SAAA,CAAC,wBAELjC,EAAAA,EAAAA,KAAC2G,GAAW,CACVlH,KAAK,OACLC,KAAK,SACLC,YAAY,0BACZI,MAAOiG,EACPlG,SAAU,SAAAgH,GAAC,OAAIvG,GAASwG,EAAAA,GAAAA,GAAcD,EAAEzF,OAAOtB,OAAO,EACtDiH,gBAAiB,UAK3B,E,qBC/CaC,GAAYjI,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wYAqBvBgI,GAAelI,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2GAOzBiI,GAAYnI,EAAAA,GAAAA,GAAS2D,IAAAA,GAAAzD,EAAAA,EAAAA,GAAA,kPCpBrBkI,GAAW,WACtB,IAAMC,GAASnG,EAAAA,EAAAA,IAAYoG,GAAAA,IAC3B,OACE/F,EAAAA,EAAAA,MAAC0F,GAAS,CAAAhF,SAAA,CACPoF,IAAUrH,EAAAA,EAAAA,KAACuH,GAAAA,EAAM,KAClBhG,EAAAA,EAAAA,MAAC2F,GAAY,CAAAjF,SAAA,EACXjC,EAAAA,EAAAA,KAACmH,GAAS,CAAAlF,SAAC,qBACXjC,EAAAA,EAAAA,KAACM,EAAW,QAEdiB,EAAAA,EAAAA,MAAC2F,GAAY,CAAAjF,SAAA,EACXjC,EAAAA,EAAAA,KAACmH,GAAS,CAAAlF,SAAC,mBACXjC,EAAAA,EAAAA,KAAC6G,GAAM,KACP7G,EAAAA,EAAAA,KAACiG,GAAW,QAEdjG,EAAAA,EAAAA,KAACwH,EAAAA,EAAW,CACVC,UAAW,IACXC,MAAO,CACLC,OAAQ,GACRC,MAAO,IACP3F,UAEFjC,EAAAA,EAAAA,KAAA,OAAK+D,IAAI,WAAW4B,MAAM,KAAKkC,O,+gRAIvC,EACA,K","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/InputItem.styled.jsx","components/ContactForm/InputItem.jsx","redux/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/ModalForm.styled.jsx","components/Modal/ModalForm.jsx","components/Modal/ModalDelete.styled.jsx","components/Modal/ModalDelete.jsx","components/Modal/Modal.jsx","components/ContactList/CotactItem.jsx","redux/filterSelectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  height: fit-content;\n  min-height: 20vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  padding: 32px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: 2px solid blanchedalmond;\n  box-shadow: 10px 12px 12px 0px #cab1b14d;\n  color: #010101;\n  margin-bottom: 32px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 30vw;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  font-weight: bold;\n  font-size: 14px;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 12px;\n  placeholder: grey;\n  padding: 8px 12px;\n  outline-color: yellow;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    padding: 12px 16px;\n    margin-left: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    padding: 12px 16px;\n    margin-left: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Input } from './InputItem.styled';\n\nexport const InputItem = ({\n  type = 'text',\n  name,\n  placeholder,\n  pattern,\n  title,\n  onChange,\n  value,\n}) => {\n  return (\n    <Input\n      onChange={onChange}\n      value={value}\n      placeholder={placeholder}\n      type={type}\n      name={name}\n      pattern={pattern}\n      title={title}\n      required\n    />\n  );\n};\n\nInputItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n","export const getContactsItems = state => state.contacts.items;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { FaUserPlus } from 'react-icons/fa';\nimport { addContact } from '../../redux/contactsOperations';\nimport { Form, Label } from './ContactForm.styled';\nimport { Btn } from '../Btn/Btn';\nimport { InputItem } from './InputItem';\nimport { notifySettings } from '../../utils/notifySettings';\nimport { getContactsItems } from '../../redux/contactsSelectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContactsItems);\n\n  const onInputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const includesName = contacts.find(\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n\n    if (includesName) {\n      return Notiflix.Notify.warning(\n        `${name} is already in contacts`,\n        notifySettings\n      );\n    }\n\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <InputItem\n          onChange={onInputChange}\n          value={name}\n          name=\"name\"\n          placeholder=\"Enter contact`s name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </Label>\n      <Label>\n        Number\n        <InputItem\n          onChange={onInputChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter contact`s number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n      </Label>\n      <Btn type=\"submit\" icon={FaUserPlus} status=\"add\" text=\"Add contact\" />\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  margin-top: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const PhoneLink = styled.a`\n  text-decoration: none;\n  color: inherit;\n\n  &:hover,\n  &:focus {\n    color: rgba(0, 128, 75, 0.7);\n  }\n\n  & > span {\n    font-weight: normal;\n  }\n`;\n\nexport const BtnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  border-radius: 50%;\n\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  & > img {\n    border-radius: 50%;\n    width: 80px;\n  }\n`;\nexport const ListItem = styled.li`\n  width: 90%;\n  display: flex;\n  flex-direction: column;\n  font-weight: bold;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 16px;\n  padding: 16px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.1);\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  @media screen and (min-width: 768px) {\n    padding: 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    flex-direction: row;\n    max-width: 50vw;\n    width: 45vw;\n  }\n`;\n\nexport const ListItemData = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  font-size: 16px;\n  margin: 16px;\n  border-radius: 12px;\n  padding: 8px 12px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  @media screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 32px;\n    font-size: 20px;\n    margin: 0 36px;\n    padding: 12px 18px;\n    max-width: 50vw;\n  }\n`;\n\nexport const DataWrapper = styled.div`\n  & > span {\n    font-weight: normal;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1;\n`;\n\nexport const ModalWindow = styled.div`\n  position: relative;\n  height: fit-content;\n  width: fit-content;\n  background-color: white;\n  border-radius: 12px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n  opacity: 1;\n`;\n","import styled from 'styled-components';\n\nexport const BtnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  border-radius: 50%;\n  padding: 3px;\n\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  & > img {\n    border-radius: 50%;\n    width: 150px;\n  }\n`;\n\nexport const ListItem = styled.div`\n  max-width: 70vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  font-size: 16px;\n  padding: 32px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    max-width: fit-content;\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  padding: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 32px;\n    padding: 32px;\n  }\n`;\n\nexport const ListItemForm = styled.form`\n  font-size: 14px;\n  color: #010101;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  border-radius: 12px;\n  padding: 8px 12px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  font-weight: bold;\n  font-size: 14px;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 18px;\n    flex-direction: row;\n  }\n`;\n\nexport const Input = styled.input`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 12px;\n  placeholder: grey;\n  padding: 8px 12px;\n  outline-color: yellow;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n  margin-left: 8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    margin-left: 0;\n  }\n`;\n","import { useState } from 'react';\nimport { FaUserCheck } from 'react-icons/fa';\nimport Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\n\nimport {\n  AvatarWrapper,\n  InputWrapper,\n  Input,\n  Label,\n  ListItem,\n  ListItemForm,\n  ContentWrapper,\n} from './ModalForm.styled';\nimport Avatar from '../../images/girl.gif';\nimport { Btn } from 'components/Btn/Btn';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateContact } from '../../redux/contactsOperations';\nimport { getContactsItems } from '../../redux/contactsSelectors';\nimport { notifySettings } from 'utils/notifySettings';\n\nexport const ModalForm = ({ id, closeModal }) => {\n  const contacts = useSelector(getContactsItems);\n  const currentContact = contacts.find(contact => contact.id === id);\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(`${currentContact.name}`);\n  const [number, setNumber] = useState(`${currentContact.number}`);\n\n  const onInputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const includesName = contacts.find(\n      contact => contact.name === name && contact.number === number\n    );\n\n    if (includesName) {\n      return Notiflix.Notify.warning('No data changed', notifySettings);\n    }\n    dispatch(updateContact({ id, name, number }));\n    closeModal();\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ListItem>\n      <ContentWrapper>\n        <AvatarWrapper>\n          <img src={Avatar} alt=\"avatar\" />\n        </AvatarWrapper>\n        <ListItemForm onSubmit={handleSubmit}>\n          <InputWrapper>\n            <Label>\n              Change name:\n              <Input\n                onChange={onInputChange}\n                value={name}\n                name=\"name\"\n                placeholder=\"Enter contact`s name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              />\n            </Label>\n            <Label>\n              Change phone:\n              <Input\n                onChange={onInputChange}\n                value={number}\n                type=\"tel\"\n                name=\"number\"\n                placeholder=\"Enter contact`s number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              />\n            </Label>\n          </InputWrapper>\n          <Btn\n            icon={FaUserCheck}\n            type=\"submit\"\n            status=\"update\"\n            text=\"Update contact\"\n          />\n        </ListItemForm>\n      </ContentWrapper>\n    </ListItem>\n  );\n};\n\nModalForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  border-radius: 50%;\n  padding: 3px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  & > img {\n    border-radius: 50%;\n    width: 150px;\n    height: 140px;\n  }\n`;\n\nexport const Hint = styled.p`\n  font-size: 14px;\n  letter-spacing: 0.03em;\n  margin: 0 0 16px 0;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    margin: 0;\n  }\n`;\n\nexport const ListItem = styled.div`\n  max-width: 70vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  font-size: 16px;\n  padding: 16px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n\n  @media screen and (min-width: 768px) {\n    max-width: 50vw;\n    padding: 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  padding: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 32px;\n    padding: 32px;\n  }\n`;\n\nexport const ConfirmationText = styled.p`\n  margin: 0;\n  font-weight: normal;\n  text-align: center;\n  & > span {\n    font-weight: bold;\n  }\n`;\n","import { MdDelete } from 'react-icons/md';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  AvatarWrapper,\n  ListItem,\n  ContentWrapper,\n  ConfirmationText,\n  TextWrapper,\n  Hint,\n} from './ModalDelete.styled';\nimport Avatar from '../../images/delete.gif';\nimport { Btn } from 'components/Btn/Btn';\nimport { deleteContact } from '../../redux/contactsOperations';\n\nexport const ModalDeleteConfirmation = ({ id, closeModal, name }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem>\n      <ContentWrapper>\n        <AvatarWrapper>\n          <img src={Avatar} alt=\"avatar\" />\n        </AvatarWrapper>\n        <TextWrapper>\n          <ConfirmationText>\n            Are you sure you want to delete <span>{name}</span> from your\n            phonebook ?\n          </ConfirmationText>\n          <Hint>This action cannot be reversed</Hint>\n          <Btn\n            icon={MdDelete}\n            type=\"button\"\n            status=\"delete\"\n            text=\"Confirm delete\"\n            onClick={() => {\n              dispatch(deleteContact(id));\n              closeModal();\n            }}\n          />\n        </TextWrapper>\n      </ContentWrapper>\n    </ListItem>\n  );\n};\n\nModalDeleteConfirmation.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport propTypes from 'prop-types';\n\nimport { ModalOverlay, ModalWindow } from './Modal.styled';\n\nimport { ModalForm } from './ModalForm';\nimport { ModalDeleteConfirmation } from './ModalDelete';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ id, closeModal, status, name }) => {\n  useEffect(() => {\n    const onEscPress = event => {\n      if (event.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', onEscPress);\n\n    return () => {\n      window.removeEventListener('keydown', onEscPress);\n    };\n  }, [closeModal]);\n\n  const onBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <ModalOverlay onClick={onBackdropClick}>\n      <ModalWindow>\n        {status === 'edit' ? (\n          <ModalForm id={id} closeModal={closeModal} />\n        ) : (\n          <ModalDeleteConfirmation\n            id={id}\n            name={name}\n            closeModal={closeModal}\n          />\n        )}\n      </ModalWindow>\n    </ModalOverlay>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  id: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n  status: propTypes.string.isRequired,\n  closeModal: propTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { FaUserEdit, FaUserMinus } from 'react-icons/fa';\nimport {\n  ListItem,\n  ListItemData,\n  PhoneLink,\n  BtnsWrapper,\n  AvatarWrapper,\n  DataWrapper,\n} from './ContactItem.styled';\nimport { Btn } from '../Btn/Btn';\nimport Avatar from '../../images/user-icons.gif';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [statusModal, setStatusModal] = useState('');\n\n  const toggleModal = status => {\n    setShowModal(!showModal);\n    setStatusModal(status);\n  };\n\n  return (\n    <ListItem>\n      <AvatarWrapper>\n        <img src={Avatar} alt={name} width=\"48\" />\n      </AvatarWrapper>\n      <ListItemData>\n        <DataWrapper>\n          Name:<span> {name} </span>\n        </DataWrapper>\n        <DataWrapper>\n          Phone:{' '}\n          <PhoneLink href={`tel:${number}`}>\n            <span>{number}</span>\n          </PhoneLink>\n        </DataWrapper>\n      </ListItemData>\n      <BtnsWrapper>\n        <Btn\n          icon={FaUserMinus}\n          type=\"button\"\n          status=\"delete\"\n          text=\"Delete contact\"\n          onClick={() => toggleModal('delete')}\n          // onClick={() => onDeleteBtnClick(id, name)}\n        />\n        <Btn\n          icon={FaUserEdit}\n          type=\"button\"\n          status=\"edit\"\n          text=\"Edit contact\"\n          onClick={() => toggleModal('edit')}\n        />\n      </BtnsWrapper>\n      {showModal && (\n        <Modal\n          id={id}\n          closeModal={toggleModal}\n          status={statusModal}\n          name={name}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","export const getFilter = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport { notifySettings } from '../../utils/notifySettings';\n\nimport { List } from './ContactList.styled';\nimport { ContactItem } from './CotactItem';\nimport { fetchContacts } from '../../redux/contactsOperations';\nimport { getContactsItems } from '../../redux/contactsSelectors';\nimport { getFilter } from '../../redux/filterSelectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(getContactsItems);\n  const filter = useSelector(getFilter);\n\n  const filterContacts = () => {\n    const query = filter.toLocaleLowerCase();\n\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(query)\n    );\n\n    if (query && !filteredContacts.length) {\n      Notiflix.Notify.warning(\n        'No contacts matching your request',\n        notifySettings\n      );\n      return [];\n    }\n    return filteredContacts;\n  };\n\n  return (\n    <>\n      <List>\n        {filterContacts().map(contact => {\n          return (\n            <ContactItem\n              id={contact.id}\n              key={contact.id}\n              name={contact.name}\n              number={contact.number}\n            />\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  width: 90%;\n  align-items: center;\n  font-size: 16px;\n  color: rgb(1, 1, 1);\n  padding: 24px 16px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: 2px solid blanchedalmond;\n  box-shadow: 10px 12px 12px 0px #cab1b14d;\n\n  & > label {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0;\n    padding: 32px;\n    font-size: 24px;\n  }\n  @media screen and (min-width: 1280px) {\n    & > label {\n      flex-direction: row;\n      gap: 0;\n      justify-content: stretch;\n    }\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/filterSlice';\nimport { DebounceInput } from 'react-debounce-input';\nimport styled from 'styled-components';\n\nimport { FilterWrapper } from './Filter.styled';\nimport { Label } from '../ContactForm/ContactForm.styled';\nimport { getFilter } from '../../redux/filterSelectors';\n\nconst FilterInput = styled(DebounceInput)`\n  min-width: 50%;\n  width: 75%;\n  border-radius: 8px;\n  font-size: 12px;\n  placeholder: grey;\n  padding: 8px 12px;\n  outline-color: yellow;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    padding: 12px 16px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    padding: 12px 16px;\n    margin-left: 16px;\n  }\n`;\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <FilterWrapper>\n      <Label>\n        Find contact by name\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter contact to search\"\n          value={filter}\n          onChange={e => dispatch(filterContact(e.target.value))}\n          debounceTimeout={500}\n        />\n      </Label>\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding: 0 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  flex-direction: column;\n  color: #010101;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 42px;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 0 62px;\n  }\n`;\n\nexport const BlockWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SubHeader = styled.h2`\n  font-size: 16px;\n  text-transform: uppercase;\n  margin-top: 0;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 28px;\n  }\n`;\n","import ScrollToTop from 'react-scroll-up';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { getLoadingStatus } from '../../redux/authSelectors';\nimport { Container, SubHeader, BlockWrapper } from './Contacts.styled';\nimport Arrow from '../../images/arrowUp.png';\n\nexport const Contacts = () => {\n  const loader = useSelector(getLoadingStatus);\n  return (\n    <Container>\n      {loader && <Loader />}\n      <BlockWrapper>\n        <SubHeader>Add new contact</SubHeader>\n        <ContactForm />\n      </BlockWrapper>\n      <BlockWrapper>\n        <SubHeader>Your contacts</SubHeader>\n        <Filter />\n        <ContactList />\n      </BlockWrapper>\n      <ScrollToTop\n        showUnder={160}\n        style={{\n          bottom: 40,\n          right: 40,\n        }}\n      >\n        <img alt=\"arrow up\" width=\"35\" srcSet={Arrow} />\n      </ScrollToTop>\n    </Container>\n  );\n};\nexport default Contacts;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","InputItem","_ref","_ref$type","type","name","placeholder","pattern","title","onChange","value","_jsx","required","getContactsItems","state","contacts","items","ContactForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","useSelector","onInputChange","event","target","resetForm","_jsxs","onSubmit","preventDefault","find","contact","toLocaleLowerCase","Notiflix","concat","notifySettings","addContact","children","Btn","icon","FaUserPlus","status","text","List","PhoneLink","BtnsWrapper","AvatarWrapper","_templateObject3","ListItem","_templateObject4","ListItemData","_templateObject5","DataWrapper","_templateObject6","ModalOverlay","ModalWindow","ContentWrapper","ListItemForm","InputWrapper","_templateObject7","_templateObject8","ModalForm","id","closeModal","currentContact","src","Avatar","alt","updateContact","FaUserCheck","TextWrapper","Hint","ConfirmationText","ModalDeleteConfirmation","MdDelete","onClick","deleteContact","modalRoot","document","querySelector","Modal","useEffect","onEscPress","code","window","addEventListener","removeEventListener","createPortal","currentTarget","ContactItem","showModal","setShowModal","statusModal","setStatusModal","toggleModal","width","href","FaUserMinus","FaUserEdit","getFilter","filter","ContactList","fetchContacts","_Fragment","query","filteredContacts","includes","length","filterContacts","map","FilterWrapper","FilterInput","DebounceInput","Filter","e","filterContact","debounceTimeout","Container","BlockWrapper","SubHeader","Contacts","loader","getLoadingStatus","Loader","ScrollToTop","showUnder","style","bottom","right","srcSet"],"sourceRoot":""}